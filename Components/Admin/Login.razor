@page "/Admin/Login"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using PathFinder.Data

@inject DatabaseContext _db
@inject NavigationManager navManager

@layout BlankLayout

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      height: 100vh;
      background: linear-gradient(to bottom, #207ce5, #2979ff);
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .login-container {
      background-color: white;
      padding: 40px 30px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.2);
      width: 420px;
    }

    .login-container h2 {
      text-align: center;
      margin-bottom: 20px;
      font-size: 26px;
    }

    .login-container input[type="text"],
    .login-container input[type="password"] {
      width: 100%;
      padding: 12px;
      margin: 10px 0;
      border-radius: 5px;
      border: 1px solid #ccc;
    }

    .login-container .subtext {
      text-align: center;
      color: #888;
      margin-bottom: 10px;
    }

    .login-container a {
      font-size: 14px;
      color: #007bff;
      text-decoration: none;
      margin-bottom: 20px;
    }

    .login-container button {
      width: 100%;
      padding: 12px;
      background-color: #007bff;
      border: none;
      color: white;
      font-size: 16px;
      border-radius: 5px;
      cursor: pointer;
      margin-bottom: 15px;
    }

    .login-container .signup-text {
      text-align: center;
      font-size: 14px;
    }

    .login-container .signup-text a {
      color: #007bff;
      text-decoration: none;
    }
  </style>

</head>
<body>

<div class="login-container">
    <h2>Login</h2>
    <EditForm class="login" method="post" Model="users" FormName="LoginFormName" OnValidSubmit="ValidLoginMethodAsync">
        <labe class="subtext" style=": center">Welcome to Admin Panel</labe>
        <InputText type="text" @bind-Value="users.Username"  placeholder="Username"></InputText>
        <InputText type="Password" @bind-Value="users.Password" placeholder="Password"></InputText>
        <a style="text-align: right; display: block;" href="#">Forgot password?</a>
        <button type="submit">Login</button>
        <div class="signup-text">Don't have an account? <a href="#">Signup</a>
        </div>
    </EditForm>
</div>




</body>
</html>

@code {
    
    [SupplyParameterFromForm]
    public User users{ get; set; } = new();

    [CascadingParameter]
    public HttpContext _HttpContext { get; set; }
    
    private async Task ValidLoginMethodAsync(){
        var validateUser = _db.Users.Where(x => x.Username == users.Username && x.Password == users.Password).FirstOrDefault();

        if (validateUser is null){
            navManager.NavigateTo("/Admin/Login");
        }

        var claims = new List<Claim>{
          new Claim(ClaimTypes.Name, validateUser.Username),
          new Claim(ClaimTypes.Role, validateUser.Role)
        };

        var Identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        var Principal = new ClaimsPrincipal(Identity);

        await _HttpContext.SignInAsync(Principal);
        
        navManager.NavigateTo("/Admin");
    }
    
}
