@page "/Admin/ShowJobs"
@using System.IO.Pipelines
@using Microsoft.AspNetCore.Authorization
@using PathFinder.Data
@inject DatabaseContext _db

@inject IWebHostEnvironment env;

@rendermode InteractiveServer

@layout AdminLayout
@attribute [Authorize(Roles = "admin")]


<div class="row justify-content-center">
   <div class="col-md-12 d-flex justify-content-center">
      
      @if (jobs == null){
         <table class="table placeholder-glow">
            <thead>
            <tr>
               <th colspan="9" class="text-center">
                  <h3>List of Jobs</h3>
               </th>
            </tr>
            <tr>
               <th scope="col">#</th>
               <th scope="col">Image</th>
               <th scope="col">Title</th>
               <th scope="col">Catagory</th>
               <th scope="col">Location</th>
               <th scope="col">Salary</th>
               <th scope="col">Last Date To Apply</th>
               <th scope="col" colspan="2">Action</th>
            </tr>
            </thead>
            <tbody>
            
               <tr>
                  <th scope="row">
                     <span class="col-6 placeholder"></span>
                  </th>
                  <td> <span class="col-6 placeholder"></span></td>
                  <td> <span class="col-6 placeholder"></span></td>
                  <td> <span class="col-6 placeholder"></span></td>
                  <td> <span class="col-6 placeholder"></span></td>
                  <td> <span class="col-6 placeholder"></span></td>
                  <td> <span class="col-6 placeholder"></span></td>
                  <td>
                     <span class="col-6 placeholder"></span>
                  </td>
                  <td>
                     <span class="col-6 placeholder"></span>
                     @* <button class="btn btn-danger" @onclick="@(()=>@Delete(item.Id))">Delete</button> *@
                  </td>
               </tr>
            
            </tbody>
         </table>
      }
      else{
         <table class="table">
            <thead>
            <tr>
               <th colspan="9" class="text-center">
                  <h3>List of Jobs</h3>
               </th>
            </tr>
            <tr>
               <th scope="col">#</th>
               <th scope="col">Image</th>
               <th scope="col">Title</th>
               <th scope="col">Catagory</th>
               <th scope="col">Location</th>
               <th scope="col">Salary</th>
               <th scope="col">Last Date To Apply</th>
               <th scope="col" colspan="2">Action</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in jobs){
               <tr>
                  <th scope="row">@item.Id</th>
                  <td> <img src="Images/@item.Image" height="100px"/> </td>
                  <td>@item.Name</td>
                  <td>@item.Nature</td>
                  <td>@item.Location</td>
                  <td>@item.Salary</td>
                  <td>@item.LastDateToApply</td>
                  <td>
                     <button type="button" @onclick="@(()=>@FindSelectedJos(item.Id))" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                        Edit
                     </button>
                  </td>
                  <td>
                     <button type="button" @onclick="@(()=>@FindSelectedJos(item.Id))" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                        Delete
                     </button>

                     @* <button class="btn btn-danger" @onclick="@(()=>@Delete(item.Id))">Delete</button> *@
                  </td>
               </tr>
            }
            </tbody>
         </table>
      }
      
   </div>
    
</div>


<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
   <div class="modal-dialog">
      <div class="modal-content">
         <div class="modal-header">
            <h3 class="modal-title fs-5" id="exampleModalLabel">Delete Catagory</h3>
         </div>
         <div class="modal-body">
            Are you sure you want to delete this record? 
         </div>
         <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="button" @onclick="@(() => Delete())" data-bs-dismiss="modal" class="btn btn-danger">Delete</button>
         </div>
      </div>
   </div>
</div>



<!-- Update Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
   <div class="modal-dialog">
      <div class="modal-content">
         <div class="modal-header">
            <h3 class="modal-title fs-5" id="exampleModalLabel1">Update Jobs</h3>
         </div>
         <div class="modal-body">
            <div class="row justify-content-center">
               <div class="col-12 d-flex justify-content-center">
                  <EditForm class="row g-3" method="post" enctype="multipart/form-data" Enhance="true" Model="SelectedJob" FormName="UpdateJobFrom" OnValidSubmit="UpdateJobMethod">
                     <DataAnnotationsValidator/>
                     <div class="col-6">
                        <label class="form-label">Job Title : </label> 
                        <InputText class="form-control" @bind-Value="SelectedJob.Name"></InputText>
                        <ValidationMessage class="text-danger" For="@(() => SelectedJob.Name)" />
                     </div>

                     <div class="col-6">
                        <label class="form-label" >Catagory : </label>
                        <InputSelect class="form-control" @bind-Value="SelectedJob.Nature">
                           <option value="">Select Catagory</option>
                           @foreach (var item in Cat){
                              <option value="@item.Name">@item.Name</option>
                           }
                    
                        </InputSelect>
                     </div>
                     
                     <div class="col-6">
                        <label class="form-label">Job Location : </label> 
                        <InputText class="form-control" @bind-Value="SelectedJob.Location"></InputText>
                        <ValidationMessage class="text-danger" For="@(() => SelectedJob.Location)" />
                     </div>
            
                     <div class="col-6">
                        <label class="form-label">Salary : </label>
                        <InputText class="form-control" @bind-Value="SelectedJob.Salary"></InputText>
                        <ValidationMessage class="text-danger" For="@(() => SelectedJob.Salary)" />
                     </div>
            
                     <div class="col-6">
                        <label class="form-label">Last Date To Apply : </label>
                        <InputText class="form-control" @bind-Value="SelectedJob.LastDateToApply"></InputText>
                        <ValidationMessage class="text-danger" For="@(() => SelectedJob.LastDateToApply)" />
                     </div>
            
                     <div class="col-12">
                        <label class="form-label">Upload Photo : </label>
                        <InputFile class="form-control" OnChange="LoadFile" name="jobs.Photo" />
                     </div>

                     <div class="col-12">
                        <button class="btn btn-success mt-3" type="submit" data-bs-dismiss="modal" >Update Job</button>
                     </div>
                  </EditForm>
                  
               </div>
            </div>
         </div>
         <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
         </div>
      </div>
      
      
   </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

@code {

   IBrowserFile browserFile;
   
   public IEnumerable<Job> jobs{ get; set; }

   public IEnumerable<Catagory> Cat{ get; set; }

   [SupplyParameterFromForm]
   public Job SelectedJob{ get; set; } = new();

   protected override void OnInitialized(){

      Cat = _db.Catagories;
      jobs = _db.Jobs;
      base.OnInitialized();
   }

   private async Task UpdateJobMethod(){
      if (browserFile == null){
         _db.Jobs.Update(SelectedJob);
         _db.SaveChanges();
      }
      else{
         // string ImageName = SelectedJob.Photo.FileName;
         string ImageName = browserFile.Name;
         string OldImage = SelectedJob.Image;
         
         DeleteImage(OldImage);
         
         var FolderPath = Path.Combine(env.WebRootPath, "Images");
         var ImagePath = Path.Combine(FolderPath, ImageName);

         var myFileStream = new FileStream(ImagePath, FileMode.Create);
         
         await browserFile.OpenReadStream().CopyToAsync(myFileStream);
         
         myFileStream.Close();

         SelectedJob.Image = ImageName;
         
         // SelectedJob.Photo.CopyTo(myFileStream);
         _db.Jobs.Update(SelectedJob);
         _db.SaveChanges();
      }
   }

   public void Delete(){
      _db.Jobs.Remove(SelectedJob);
      _db.SaveChanges();
   }

   private void FindSelectedJos(int Id){
      SelectedJob = _db.Jobs.Find(Id);
   }
   
   private void LoadFile(InputFileChangeEventArgs e){
      browserFile = e.File;
   }


   private void DeleteImage(string ImageName){
      string _ImageName = ImageName;
      var FolderPath = Path.Combine(env.WebRootPath, "Images");
      var ImagePath = Path.Combine(FolderPath, _ImageName);
      if (File.Exists(ImagePath)){
         File.Delete(ImagePath);
      }
   }
   
}